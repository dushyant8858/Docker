dushyant@dushyant-VirtualBox:~$ history 

   31  sudo apt-get update 
   32  sudo apt-get install apt-transport-https ca-certificates curl software-properties-common 

   36  curl -fsSl https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
   37  sudo apt-key fingerprint 0EBFCD88

   40  sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
   41  sudo apt-get update 

   42  sudo apt-get install docker-ce 

   44  sudo docker run hello-world

   50  sudo docker info 

   52  sudo docker image ls 
   53  sudo docker container ls -all 

   59  sudo su -root 
  
   66  history 
****************** Installation is DONE **********************




root@dushyant-VirtualBox:/var/lib/docker/volumes/wp_data/_data# history 

    3  docker image
    4  docker image --help 

    7  docker images --help 
    8  clear 
    9  docker pull busybox
   10  docker run --help

   12  docker run --detach --name server busybox
   13  docker ps 
   14  history 
   15  docker run --detach --name server busybox
   16  docker run --detach --name server busybox sh -c "while true; do sleep 5; done"
   17  docker rm server 
   18  docker run --detach --name server busybox sh -c "while true; do sleep 5; done"
   19  docker ps 
   20  docker stop server 
   21  docker start server 
   22  docker restart server 
   23  history 
   24  clear 
   25  docker stop server 
   26  docker rm server 
   27  docker run -itd --name server busybox
   28  docker ps 
   29  docker attach server 
   30  docker start  server 
   31  docker attach server 
   32  docker run -d --name server1 --rm busybox ifconfig a
   33  ifconfig a
   34  ifconfig 
   35  clear 



   36  ********Closed Networking Model*************
   37  docker run -it --rm --net none busybox ifconfig -a

   38  ********Bridged Networking Model: DEFAULT MODE****************
   39  docker run -it --rm  none busybox ifconfig -a
   40  docker run -it --rm  busybox ifconfig -a
   41  docker run -it --rm --net bridge  busybox ifconfig -a

   42  *************Open Networking Model*******************
   43  docker run -d -p 80 --name webserver httpd
   44  docker ps 
   45  docker stop webserver 
   46  docker rm  webserver 
   47  docker run -d -p 8080:80 --name webserver httpd
   48  docker ps 
   49  ip addr 
   50  clear 
   51  docker run -d -p 127.0.0.1:8080:80 --name webserver httpd
   52  docker rm webserver 
   53  docker stop webserver 
   54  docker rm webserver 
   55  docker run -d -p 127.0.0.1:8080:80 --name webserver httpd
   56  docker stop webserver 
   57  docker rm webserver 
   58  docker run -d -p 127.0.0.1::80 --name webserver httpd
   59  docker ps 
   60  ###### Open Model  ##########
   61  docker stop webserver 
   62  docker rm webserver 
   63  docker run -d --name webserver --net host  httpd
   64  docker ps 
   65  docker stop webserver 
   66  docker rm webserver 
   67  docker ps 
   68  docker run -d --name webserver --net host  httpd
   69  ifconfig 
   70  docker stop webserver 
   71  docker rm webserver 
   72  docker run -d --name webserver -p 8080:80 -v "$(pwd)":/usr/local/apache2/htdocs httpd
   73  docker pc 
   74  docker ps
   75  vim test.html
   76  vi test.html
   77  nano test.html
   78  cat test.html
   79  ls 
   80  ls -a
   81  ls -ltr
   82  ls -d
   83  cd /opt/
   84  ls -ltr
   85  ls -ld
   86  docker stop webserver 
   87  docker rm webserver 
   88  mv /root/test.html .
   89  docker run -d --name webserver -p 8080:80 -v "$(pwd)":/usr/local/apache2/htdocs httpd
   90  cat test.html
   91
   92  ##### Above config is for Bind Mounts
   93  docker stop webserver && docker rm websrver
   94  docker stop webserver && docker rm webserver
   95  docker volume create web-data-vol
   96  docker volume inspect web-data-vol
   97  cd /var/lib/docker/volumes/web-data-vol/_data

   98  ####### Named Volume
   99  docker run -d --name webserver -p 8080:80 -v web-data-vol:/usr/local/apache2/htdocs httpd
  100  ls -l
  101  cat index.html 
  102  mv /opt/test.html .

  103  ########## TMPFS Mounts
  104  clear
  105  cd
  106  docker run -ild --name secureserver --tmpfs /tmp busybox
  107  su dushyant 
  108  su 
  109  history 
  110  exit 
  111  history 
  112  docker run -itd --name secureserver --tmpfs /tmp busybox
  113  docker stop secureserver && docker rm secureserver
  114  docker run -itd --name secureserver --tmpfs /tmp busybox
  115  docker attach secureserver 
  116  docker ps 
  117  docker start secureserver 
  118  docker attach secureserver 
  119  docker rm secureserver 
  120  docker run -itd --name secureserver busybox
  121  docker attach secureserver 
  122  docker start secureserver 
  123  docker attach secureserver 
  124  history 
  125  clear 






  126  #########LAB LAMP Stack###
  127  docker run -e MYSQL_ROOT_PASSWORD=admin -e 
  128  MYSQL_USER=wordpress -e MYSQL_PASSWORD=wordpress -e 
  129  MYSQL_DATABASE=wp_database -v wp_database:/var/lib/mysql --name 
  130  docker run -e MYSQL_ROOT_PASSWORD=admin -e MYSQL_USER=wordpress -e MYSQL_PASSWORD=wordpress -e MYSQL_DATABASE=wp_database -v wp_database:/var/lib/mysql --name wordpressdb -d mariadb
  131  apt-get install mysql-client
  132  docker ps 
  133  mysql -u webpress -pwebpress -h
  134  docker inspect wordpressdb 
  135  mysql -u webpress -pwebpress -h 172.17.0.3 
  136  mysql -u webpress -pwebpress -h 172.17.0.3 Asudo 
  137  sudo mysql -u webpress -pwebpress -h 172.17.0.3 
  138  sudo mysql -u wordpress -pwordpress -h 172.17.0.3 
  139  docker run -e WORDPRESS_DB_USER=wordpress -e WORDPRESS_DB_PASSWORD=wordpress -e WORDPRESS_DB_NAME=wp_database -e WORDPRESS_DB_HOST=172.17.0.3  -p 8080:80 -v wp_data:/var/www/html  --name wordpressapp -d wordpress
  140  docker stop wordpressdb 
  141  docker rm  wordpressdb 
  142  docker rm  wordpressapp 
  143  docker run -e WORDPRESS_DB_USER=wordpress -e WORDPRESS_DB_PASSWORD=wordpress -e WORDPRESS_DB_NAME=wp_database -e WORDPRESS_DB_HOST=172.17.0.3  -p 8080:80 -v wp_data:/var/www/html  --name wordpressapp -d wordpress
  144  docker stop webserver 
  145  docker rm webserver 
  146  docker run -e WORDPRESS_DB_USER=wordpress -e WORDPRESS_DB_PASSWORD=wordpress -e WORDPRESS_DB_NAME=wp_database -e WORDPRESS_DB_HOST=172.17.0.3  -p 8080:80 -v wp_data:/var/www/html  --name wordpressapp -d wordpress
  147  docker rm wordpressapp 
  148  docker run -e WORDPRESS_DB_USER=wordpress -e WORDPRESS_DB_PASSWORD=wordpress -e WORDPRESS_DB_NAME=wp_database -e WORDPRESS_DB_HOST=172.17.0.3  -p 8080:80 -v wp_data:/var/www/html  --name wordpressapp -d wordpress
  149  docker ps 
  150  docker run -e MYSQL_ROOT_PASSWORD=admin -e MYSQL_USER=wordpress -e MYSQL_PASSWORD=wordpress -e MYSQL_DATABASE=wp_database -v wp_database:/var/lib/mysql --name wordpressdb -d mariadb
  151  docker ps 
  152  sudo mysql -u wordpress -pwordpress -h 172.17.0.3 
  153  exit 
  154  history 
  155  docker ps 
  156  docker run -e WORDPRESS_DB_USER=wordpress -e WORDPRESS_DB_PASSWORD=wordpress -e WORDPRESS_DB_NAME=wp_database -e WORDPRESS_DB_HOST=172.17.0.3  -p 8080:80 -v wp_data:/var/www/html  --name wordpressapp -d wordpress
  157  docker ps 
  158  docker stop wordpressdb 
  159  docker rm  wordpressdb 
  160  docker stop webserver 
  161  docker ps 






  162  ####### LAMP start $$$$$$
  163  clear 
  164  history 
  165  docker run -e MYSQL_ROOT_PASSWORD=admin -e MYSQL_USER=wordpress -e MYSQL_PASSWORD=wordpress -e MYSQL_DATABASE=wp_database -v wp_database:/var/lib/mysql --name wordpressdb -d mariadb
  166  apt-get install mysql-client
  167  docker inspect wordpressdb
  168  sudo mysql -u wordpress -pwordpress -h 172.17.0.2
  169  docker run -e WORDPRESS_DB_USER=wordpress -e WORDPRESS_DB_PASSWORD=wordpress -e WORDPRESS_DB_NAME=wp_database -e WORDPRESS_DB_HOST=172.17.0.2  -p 8080:80 -v wp_data:/var/www/html  --name wordpressapp -d wordpress
  170  docker rm wordpressapp 
  171  docker run -e WORDPRESS_DB_USER=wordpress -e WORDPRESS_DB_PASSWORD=wordpress -e WORDPRESS_DB_NAME=wp_database -e WORDPRESS_DB_HOST=172.17.0.2  -p 8080:80 -v wp_data:/var/www/html  --name wordpressapp -d wordpress
  172  docker ps 
  173  docker volume inspect wb_daa
  174  docker volume inspect wb_da
  175  docker volume inspect wb_daTA
  176  docker volume inspect wb_data
  177  docker volume inspect wp_dat
  178  docker volume inspect wp_data
  179  cd /var/lib/docker/volumes/wp_data/_data
  180  ls -l 
  181  hisory 
  182  history

